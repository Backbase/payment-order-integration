<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The simplest way to build a service with service-sdk-starter-core 
        is to use it as a parent in your project’s POM file, and alternative If you 
        don’t want to use service-sdk-starter-core as your project’s parent, you 
        can declare it as a dependency instead, see pom-as-dependency.xml -->
    <parent>
        <artifactId>service-sdk-starter-core</artifactId>
        <groupId>com.backbase.buildingblocks</groupId>
        <version>15.0.1</version>
        <relativePath/>
    </parent>

    <groupId>com.mybank.dbs.payments.integration</groupId>
    <artifactId>payments-integration</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Backbase :: Digital Banking Services :: my-bank-payment-order-integration-service</name>

    <!-- tag::add-properties[] -->
    <properties>
        <java.version>17</java.version>

        <backbase-bom.version>2022.08.5-LTS</backbase-bom.version>

        <swagger-annotations.version>1.6.4</swagger-annotations.version>
        <jackson-databind-nullable.version>0.2.3</jackson-databind-nullable.version>
        <jsr305.version>3.0.2</jsr305.version>
        <junit-vintage-engine.version>5.8.2</junit-vintage-engine.version>
        <boat-maven-plugin.version>0.16.5</boat-maven-plugin.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

        <specs.path>${project.build.directory}/specs</specs.path>

        <payment-order-integration-outbound-api.version>2.2.1</payment-order-integration-outbound-api.version>
        <payment-order-integration-inbound-api.version>2.1.0</payment-order-integration-inbound-api.version>
    </properties>
    <!-- end::add-properties[] -->

    <!-- tag::add-dependency-management[] -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.backbase</groupId>
                <artifactId>backbase-bom</artifactId>
                <version>${backbase-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- end::add-dependency-management[] -->

    <dependencies>
        <!-- tag::add-building-blocks-dependencies[] -->
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-common-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>auth-security</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>communication</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-vintage-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- end::add-building-blocks-dependencies[] -->

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
        </dependency>

        <!-- Add dependencies for your services, e.g. BB raml specifications, integration clients -->

        <!-- Uncomment the following dependency if DBS inter-service communication is needed -->
        <!--
         <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>communication</artifactId>
         </dependency>
       -->
    </dependencies>

    <build>
        <plugins>
            <!-- tag::add-dependency-plugin[] -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-integration-spec</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.backbase.dbs.paymentorder</groupId>
                                    <artifactId>payment-order-service</artifactId>
                                    <classifier>api</classifier>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${specs.path}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- end::add-dependency-plugin[] -->
            <!-- tag::add-boat-plugin[] -->
            <plugin>
                <groupId>com.backbase.oss</groupId>
                <artifactId>boat-maven-plugin</artifactId>
                <version>${boat-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-integration-outbound-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-spring-boot-embedded</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${specs.path}/payment/payment-order-integration-outbound-api-v${payment-order-integration-outbound-api.version}.yaml
                            </inputSpec>
                            <output>${project.build.directory}/generated-sources/</output>
                            <modelPackage>com.backbase.payments.integration.model</modelPackage>
                            <apiPackage>com.backbase.payments.integration.outbound.api</apiPackage>
                        </configuration>
                    </execution>
                    <!-- tag::add-inbound-integration-api[] -->
                    <execution>
                        <id>generate-integration-inbound-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate-rest-template-embedded</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${specs.path}/payment/payment-order-integration-inbound-api-v${payment-order-integration-inbound-api.version}.yaml
                            </inputSpec>
                            <output>${project.build.directory}/generated-sources/</output>
                            <modelPackage>com.backbase.payments.integration.model</modelPackage>
                            <apiPackage>com.backbase.payments.integration.inbound.api</apiPackage>
                        </configuration>
                    </execution>
                    <!-- end::add-inbound-integration-api[] -->
                </executions>
            </plugin>
            <!-- end::add-boat-plugin[] -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
